name: Build

on:
    workflow_dispatch: ~
    workflow_run:
        workflows: ["Static checks"]
        types:
            - completed

jobs:
    Build:
        runs-on: ubuntu-20.04

        name: "Build (${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MariaDB ${{ matrix.mariadb }}, Node ${{ matrix.node }})"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["^5.4"]
                sylius: ["~1.11.7"]
                node: ["14.x", "16.x"]
                mariadb: ["10.4.10"]

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?charset=utf8mb4&serverVersion=mariadb-${{ matrix.mariadb }}"

        steps:
            -
                uses: actions/checkout@v2
            -
                name: Shutdown default MySQL
                run: sudo service mysql stop
            -
                uses: getong/mariadb-action@v1.1
                with:
                    mariadb version: "${{ matrix.mariadb }}"
                    mysql root password: root
            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: date.timezone=Europe/Warsaw, opcache.enable=1, opcache.enable_cli=0, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
                    extensions: intl, gd, opcache, mysql, pdo_mysql
                    tools: symfony
                    coverage: none

            -   name: Install Symfony CLI
                run: |
                    curl -sS https://get.symfony.com/cli/installer | bash
                    mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:1.18.5"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-
            -
                name: Install PHP dependencies
                run: composer update --no-interaction --no-scripts

            -
                name: Setup Node
                uses: actions/setup-node@v2
                with:
                    node-version: "${{ matrix.node }}"

            -
                name: Get Yarn cache directory
                id: yarn-cache
                run: echo "::set-output name=dir::$(yarn cache dir)"

            -
                name: Cache Yarn
                uses: actions/cache@v2
                with:
                    path: ${{ steps.yarn-cache.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-node-${{ matrix.node }}-yarn-
            -
                name: Install JS dependencies
                run: yarn install

            -
                name: Build assets
                run: |
                    bin/console assets:install public -vvv
                    yarn build:prod

            -
                name: Dump the environment
                run: |
                    echo "DATABASE_URL=$DATABASE_URL" >> .env.$APP_ENV
                    composer dump-env $APP_ENV
            -
                name: Warmup cache
                run: bin/console cache:warmup

            -
                name: Prepare application database
                run: |
                    APP_DEBUG=1 bin/console doctrine:database:create -vvv
                    bin/console doctrine:migrations:migrate -n -vvv
            -
                name: Test provided migrations
                run: |
                    bin/console doctrine:migrations:migrate first --no-interaction
                    bin/console doctrine:migrations:migrate latest --no-interaction
            -
                name: Validate Database Schema
                run: bin/console doctrine:schema:validate -vvv

            -
                name: Test installer
                run: bin/console sylius:install --no-interaction -vvv
                continue-on-error: true

            -
                name: Load fixtures
                run: bin/console sylius:fixtures:load default --no-interaction
                continue-on-error: true

            -   name: Run non-JS Behat
                run: |
                    bin/console cache:pool:clear cache.global_clearer
                    vendor/bin/behat --colors --strict --no-interaction -vvv -f progress --tags="~@javascript&&~@todo&&~@cli"

            -   name: Run JS Behat
                run: |
                    bin/console cache:pool:clear cache.global_clearer
                    vendor/bin/behat --colors --strict --no-interaction -vvv -f progress --tags="@javascript&&~@todo&&~@cli"

            -   name: Upload Behat logs
                uses: actions/upload-artifact@v2
                if: failure()
                with:
                    name: "Behat logs (JS, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }})"
                    path: etc/build/
                    if-no-files-found: ignore
