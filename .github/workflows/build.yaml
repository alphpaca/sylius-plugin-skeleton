name: Build

on:
    pull_request: ~
    workflow_dispatch: ~
    push:
        branches:
            - main
    release:
        types: [created]

jobs:
    static-checks:
        runs-on: ubuntu-20.04

        name: "Static checks (${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }})"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1"]
                symfony: ["5.4.*"]
                sylius: ["~1.11.7"]

        env:
            APP_ENV: test

        steps:
            -
                uses: actions/checkout@v2
            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: date.timezone=Europe/Warsaw, opcache.enable=1, opcache.enable_cli=0, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
                    extensions: intl, gd, opcache, mysql, pdo_mysql
                    tools: symfony
                    coverage: none

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:1.18.5"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-
            -
                name: Install PHP dependencies
                run: composer update --no-interaction --no-scripts

            -
                name: Dump the environment
                run: |
                    composer dump-env $APP_ENV
            -
                name: Warmup cache
                run: bin/console cache:warmup

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse -c phpstan.neon.dist

            -
                name: Run Psalm
                run: vendor/bin/psalm -c psalm.xml.dist

            -
                name: Run PHPSpec
                run: vendor/bin/phpspec run --ansi -f progress --no-interaction -c phpspec.yaml.dist

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always -c phpunit.xml.dist

            -
                name: Run architectural tests
                run: vendor/bin/phparkitect check
